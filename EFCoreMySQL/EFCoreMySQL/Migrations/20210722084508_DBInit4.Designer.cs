// <auto-generated />
using System;
using EFCoreMySQL.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreMySQL.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20210722084508_DBInit4")]
    partial class DBInit4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("EFCoreMySQL.Model.Category", b =>
                {
                    b.Property<int>("IDCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("NameCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IDCategory")
                        .HasName("PK_Categorys");

                    b.HasIndex("Description")
                        .HasDatabaseName("Idx_Description");

                    b.HasIndex("NameCategory")
                        .HasDatabaseName("Idx_NameCategory");

                    b.HasIndex("Supplier")
                        .HasDatabaseName("Idx_Supplier");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Order", b =>
                {
                    b.Property<int>("IDOder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DayBuy")
                        .HasColumnType("datetime");

                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<ulong>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDOder")
                        .HasName("PK_Order");

                    b.HasIndex("Address")
                        .HasDatabaseName("Idx_Address");

                    b.HasIndex("IDProduct");

                    b.HasIndex("UserName")
                        .HasDatabaseName("Idx_serName");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Product", b =>
                {
                    b.Property<int>("IDProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IDCategory")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MetaName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<ulong>("Status")
                        .HasColumnType("bit");

                    b.Property<float>("UnitCost")
                        .HasColumnType("float");

                    b.HasKey("IDProduct")
                        .HasName("PK_Products");

                    b.HasIndex("Author")
                        .HasDatabaseName("Idx_Author");

                    b.HasIndex("IDCategory");

                    b.HasIndex("NameProduct")
                        .HasDatabaseName("Idx_NameProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Users");

                    b.HasIndex("Account")
                        .HasDatabaseName("Idx_FirstName");

                    b.HasIndex("Password")
                        .HasDatabaseName("Idx_LastName");

                    b.HasIndex("UserGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_UserGroups");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Idx_Name");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Order", b =>
                {
                    b.HasOne("EFCoreMySQL.Model.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Product", b =>
                {
                    b.HasOne("EFCoreMySQL.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IDCategory")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.User", b =>
                {
                    b.HasOne("EFCoreMySQL.Model.UserGroup", null)
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .HasConstraintName("FK_Users_UserGroups")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EFCoreMySQL.Model.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
